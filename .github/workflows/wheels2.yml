# Use cibuildwheel v2 to build wheels for Python 3.
# Based on https://cibuildwheel.readthedocs.io/en/stable/setup/

name: Wheels2

on:
  workflow_dispatch:
    inputs:
      cibw_build:
        description: 'CIBW_BUILD'
        default: '*'
      cibw_skip:
        description: 'CIBW_SKIP'
        # To limit the number of builds, skip most of musl-based versions,
        # PyPy, and 32-bit builds.
        default: 'pp* cp{37,38,39}-musllinux* *_i686 *-win32'
      cibw_config_settings:
        description: 'CIBW_CONFIG_SETTINGS'
        default: ''

jobs:
  build_wheels:
    name: build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-22.04, windows-2022, macos-13, macos-14]
        os: [macos-12]

    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.5
      env:
        CIBW_BUILD: ${{ github.event.inputs.cibw_build }}
        CIBW_SKIP: ${{ github.event.inputs.cibw_skip }}
        CIBW_CONFIG_SETTINGS: ${{ github.event.inputs.cibw_config_settings }}

    - run: ls -lh wheelhouse
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: wheelhouse/*.whl

  merge:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: cibw-wheels
          pattern: cibw-wheels-*
          delete-merged: true

  test:
    needs: merge
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12, macos-13]
        py: ['3.8', '3.9', '3.10', '3.11', '3.12']
    name: test on ${{ matrix.os }} py${{ matrix.py }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: cibw-wheels
          path: wheels
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - run: |
          ls -R wheels
          python --version
          python -m pip install --no-index --find-links=wheels gemmi
          python -m unittest discover -s tests -v
